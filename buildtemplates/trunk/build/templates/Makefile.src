# Make the C/C++ compile portion of a Python extension module
#
# The Makefile.global contains rules for building .c, .o files and sets 
# compile and library flags.  This include requires that make be called 
# with -I option.  
#
include Makefile.global

# List the executables that are to get built.  INSTALLPROGS are the ones 
# you actually want installed.  
INSTALLPROGS = 
PROGS = $(INSTALLPROGS) 

# Add or override any variables as necessary
#
# NEED_SIGNALHANDLER_DEF ?= -DNEED_SIGNALHANDLER_DEF
# CFLAGS += $(NEED_SIGNALHANDLER_DEF)
# CC = mpicc -g

.PHONY : all
all : build

.PHONY : build
build : $(PROGS)

# Create a rule for each program
#
testing: testing.o
	$(CC) testing.o -o testing $(SUPPORT_LIBS)


install : build
	install -d $(BINDIR)
	install $(INSTALLPROGS) $(BINDIR)


clean :
	$(RM) *.o _*.{so,dylib} *_wrap.c
	$(RM) core core.[0-9]*[0-9] *~

distclean: clean
	@ $(RM) .Makefile.depend
	$(RM) *.so *.pyc wcstools.py*
	$(RM) $(PROGS)
